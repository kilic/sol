/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IncrementalBatchInterface extends ethers.utils.Interface {
  functions: {
    "BATCH_DEPTH()": FunctionFragment;
    "BATCH_SIZE()": FunctionFragment;
    "DEPTH()": FunctionFragment;
    "SET_SIZE()": FunctionFragment;
    "WITNESS_LENGTH()": FunctionFragment;
    "ZEROS(uint256)": FunctionFragment;
    "filledSubtrees(uint256)": FunctionFragment;
    "leafIndex()": FunctionFragment;
    "root()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "BATCH_DEPTH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BATCH_SIZE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "DEPTH", values?: undefined): string;
  encodeFunctionData(functionFragment: "SET_SIZE", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "WITNESS_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ZEROS", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "filledSubtrees",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "leafIndex", values?: undefined): string;
  encodeFunctionData(functionFragment: "root", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "BATCH_DEPTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "BATCH_SIZE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "DEPTH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "SET_SIZE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "WITNESS_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ZEROS", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "filledSubtrees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "leafIndex", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "root", data: BytesLike): Result;

  events: {};
}

export class IncrementalBatch extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IncrementalBatchInterface;

  functions: {
    BATCH_DEPTH(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "BATCH_DEPTH()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    BATCH_SIZE(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "BATCH_SIZE()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    DEPTH(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "DEPTH()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    SET_SIZE(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "SET_SIZE()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    WITNESS_LENGTH(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "WITNESS_LENGTH()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    ZEROS(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "ZEROS(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    filledSubtrees(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "filledSubtrees(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    leafIndex(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "leafIndex()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    root(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "root()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  BATCH_DEPTH(overrides?: CallOverrides): Promise<BigNumber>;

  "BATCH_DEPTH()"(overrides?: CallOverrides): Promise<BigNumber>;

  BATCH_SIZE(overrides?: CallOverrides): Promise<BigNumber>;

  "BATCH_SIZE()"(overrides?: CallOverrides): Promise<BigNumber>;

  DEPTH(overrides?: CallOverrides): Promise<BigNumber>;

  "DEPTH()"(overrides?: CallOverrides): Promise<BigNumber>;

  SET_SIZE(overrides?: CallOverrides): Promise<BigNumber>;

  "SET_SIZE()"(overrides?: CallOverrides): Promise<BigNumber>;

  WITNESS_LENGTH(overrides?: CallOverrides): Promise<BigNumber>;

  "WITNESS_LENGTH()"(overrides?: CallOverrides): Promise<BigNumber>;

  ZEROS(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "ZEROS(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  filledSubtrees(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "filledSubtrees(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  leafIndex(overrides?: CallOverrides): Promise<BigNumber>;

  "leafIndex()"(overrides?: CallOverrides): Promise<BigNumber>;

  root(overrides?: CallOverrides): Promise<string>;

  "root()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    BATCH_DEPTH(overrides?: CallOverrides): Promise<BigNumber>;

    "BATCH_DEPTH()"(overrides?: CallOverrides): Promise<BigNumber>;

    BATCH_SIZE(overrides?: CallOverrides): Promise<BigNumber>;

    "BATCH_SIZE()"(overrides?: CallOverrides): Promise<BigNumber>;

    DEPTH(overrides?: CallOverrides): Promise<BigNumber>;

    "DEPTH()"(overrides?: CallOverrides): Promise<BigNumber>;

    SET_SIZE(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_SIZE()"(overrides?: CallOverrides): Promise<BigNumber>;

    WITNESS_LENGTH(overrides?: CallOverrides): Promise<BigNumber>;

    "WITNESS_LENGTH()"(overrides?: CallOverrides): Promise<BigNumber>;

    ZEROS(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "ZEROS(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    filledSubtrees(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "filledSubtrees(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    leafIndex(overrides?: CallOverrides): Promise<BigNumber>;

    "leafIndex()"(overrides?: CallOverrides): Promise<BigNumber>;

    root(overrides?: CallOverrides): Promise<string>;

    "root()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    BATCH_DEPTH(overrides?: CallOverrides): Promise<BigNumber>;

    "BATCH_DEPTH()"(overrides?: CallOverrides): Promise<BigNumber>;

    BATCH_SIZE(overrides?: CallOverrides): Promise<BigNumber>;

    "BATCH_SIZE()"(overrides?: CallOverrides): Promise<BigNumber>;

    DEPTH(overrides?: CallOverrides): Promise<BigNumber>;

    "DEPTH()"(overrides?: CallOverrides): Promise<BigNumber>;

    SET_SIZE(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_SIZE()"(overrides?: CallOverrides): Promise<BigNumber>;

    WITNESS_LENGTH(overrides?: CallOverrides): Promise<BigNumber>;

    "WITNESS_LENGTH()"(overrides?: CallOverrides): Promise<BigNumber>;

    ZEROS(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "ZEROS(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    filledSubtrees(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "filledSubtrees(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    leafIndex(overrides?: CallOverrides): Promise<BigNumber>;

    "leafIndex()"(overrides?: CallOverrides): Promise<BigNumber>;

    root(overrides?: CallOverrides): Promise<BigNumber>;

    "root()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    BATCH_DEPTH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BATCH_DEPTH()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    BATCH_SIZE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BATCH_SIZE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DEPTH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "DEPTH()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SET_SIZE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "SET_SIZE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    WITNESS_LENGTH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "WITNESS_LENGTH()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ZEROS(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ZEROS(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    filledSubtrees(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "filledSubtrees(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    leafIndex(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "leafIndex()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    root(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "root()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
