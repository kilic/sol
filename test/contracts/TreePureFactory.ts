/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { TreePure } from "./TreePure";

export class TreePureFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TreePure> {
    return super.deploy(overrides || {}) as Promise<TreePure>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TreePure {
    return super.attach(address) as TreePure;
  }
  connect(signer: Signer): TreePureFactory {
    return super.connect(signer) as TreePureFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreePure {
    return new Contract(address, _abi, signerOrProvider) as TreePure;
  }
}

const _abi = [
  {
    inputs: [],
    name: "DEPTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "WITNESS_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "ZEROS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "stateIndex",
        type: "uint256"
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32"
      },
      {
        internalType: "bytes32[32]",
        name: "witness",
        type: "bytes32[32]"
      }
    ],
    name: "checkStateInclusion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "buf",
        type: "bytes32[]"
      }
    ],
    name: "calculateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "buf",
        type: "bytes32[]"
      }
    ],
    name: "calculateRootTruncated",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "stateIndex",
        type: "uint256"
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32"
      },
      {
        internalType: "bytes32[32]",
        name: "witness",
        type: "bytes32[32]"
      }
    ],
    name: "gas_cost_checkStateInclusion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "buf",
        type: "bytes32[]"
      }
    ],
    name: "gas_cost_calculateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "buf",
        type: "bytes32[]"
      }
    ],
    name: "gas_cost_calculateRootTruncated",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x610480604052600060808181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560a0527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060c0527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560e0527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a19344610100527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d610120527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a1968610140527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f83610160527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af610180527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101a0527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101c0527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101e0527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c610200527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb610220527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc610240527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d2610260527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f610280527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102a0527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102c0527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102e0527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e2610300527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd9610320527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e377610340527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee652610360527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef610380527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103a0527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103c0527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103e0527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e610400527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea322610420527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d735610440527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a961046052610490919060206104a3565b5034801561049d57600080fd5b506104fe565b82602081019282156104d1579160200282015b828111156104d15782518255916020019190600101906104b6565b506104dd9291506104e1565b5090565b6104fb91905b808211156104dd57600081556001016104e7565b90565b61086e8061050d6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806398366e3511610076578063ae164f291161005b578063ae164f29146102db578063cb21cbd0146102f8578063da02254d1461033b576100a3565b806398366e35146101e6578063a2f67c2c14610291576100a3565b806310b4d8d3146100a857806355954fa91461012a5780635e71468b146101e657806360a4895e146101ee575b600080fd5b610118600480360360208110156100be57600080fd5b8101906020810181356401000000008111156100d957600080fd5b8201836020820111156100eb57600080fd5b8035906020019184602083028401116401000000008311171561010d57600080fd5b5090925090506103ab565b60408051918252519081900360200190f35b6101cd6004803603602081101561014057600080fd5b81019060208101813564010000000081111561015b57600080fd5b82018360208201111561016d57600080fd5b8035906020019184602083028401116401000000008311171561018f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506103f0945050505050565b6040805192835260208301919091528051918290030190f35b610118610412565b6101cd6004803603602081101561020457600080fd5b81019060208101813564010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184602083028401116401000000008311171561025357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610417945050505050565b6102c060048036036104608110156102a857600080fd5b50803590602081013590604081013590606001610429565b60408051921515835260208301919091528051918290030190f35b610118600480360360208110156102f157600080fd5b5035610451565b610327600480360361046081101561030f57600080fd5b50803590602081013590604081013590606001610465565b604080519115158252519081900360200190f35b6101186004803603602081101561035157600080fd5b81019060208101813564010000000081111561036c57600080fd5b82018360208201111561037e57600080fd5b803590602001918460208302840111640100000000831117156103a057600080fd5b50909250905061047c565b60006103e98383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506104ba92505050565b9392505050565b6000806000805a9050610402856105fa565b9150815a90969103945092505050565b602081565b6000806000805a9050610402856104ba565b6000806000805a905061043e88888888610751565b9150815a90999103975095505050505050565b6000816020811061045e57fe5b0154905081565b600061047385858585610751565b95945050505050565b60006103e98383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506105fa92505050565b80516000907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810181161561053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061080e602b913960400191505060405180910390fd5b60011c5b80610548576105dd565b60005b818110156105d4576000600182901b905084818151811061056857fe5b602002602001015185826001018151811061057f57fe5b60200260200101516040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208583815181106105c057fe5b60209081029190910101525060010161054b565b5060011c61053e565b826000815181106105ea57fe5b6020026020010151915050919050565b80516000906001808216918101901c825b60005b838303811015610699576000600182901b905086818151811061062d57fe5b602002602001015187826001018151811061064457fe5b602002602001015160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012087838151811061068557fe5b60209081029190910101525060010161060e565b836001141561070f5785600182901b815181106106b257fe5b6020026020010151600083602081106106c757fe5b015460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012086828151811061070257fe5b6020026020010181815250505b826001141561071e5750610732565b5060018083169350918201821c910161060b565b8460008151811061073f57fe5b60200260200101519350505050919050565b60008284825b60208110156108005781600116600114156107b25784816020811061077857fe5b60200201358360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506107f4565b828582602081106107bf57fe5b602002013560405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b600191821c9101610757565b505090941494935050505056fe526f6c6c7570547265653a20696e707574206c656e676874206d75737420626520706f776572206f662032a264697066735822122039a16dcb985060ab339256eb8e8a6534ea7e5b071aa044f01eebad8f5d33f3fa64736f6c634300060a0033";
